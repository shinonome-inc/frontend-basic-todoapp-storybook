{"version":3,"file":"components-Molecules-Task-story.d26f62f7.iframe.bundle.js","mappings":";AAeA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSA;;;;;;;;;AASA;;;ACNA;AACA;AACA;;;;;;;;;;;ACuBA;;AAIA;;;;;AAOA;AACA;AACA;;;;;;AAQA","sources":["webpack://fb2022-todoapp/./src/components/Atoms/Checkbox/index.jsx","webpack://fb2022-todoapp/./src/components/Atoms/EditButton/index.jsx","webpack://fb2022-todoapp/./src/components/Atoms/Input/index.jsx","webpack://fb2022-todoapp/./src/components/Molecules/Task/index.jsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport check from \"../../../assets/svg/check.svg\";\nimport COLOR from \"../../../variables/color\";\n\nconst Checkbox = ({ onClick }) => {\n  return (\n    <StyledButton onClick={onClick}>\n      <img src={check} />\n    </StyledButton>\n  );\n};\nexport default Checkbox;\n\nconst StyledButton = styled.button`\n  border: 2px solid ${COLOR.LIGHT_GRAY};\n  border-radius: 2px;\n  background: none;\n  outline: none;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  padding: 0;\n\n  & > img {\n    display: none;\n    width: 100%;\n    height: 100%;\n  }\n\n  &:hover {\n    & > img {\n      display: block;\n    }\n  }\n`;\n","import React from \"react\";\nimport pencil from \"../../../assets/svg/pencil.svg\";\nimport styled from \"styled-components\";\nimport COLOR from \"../../../variables/color\";\n\nconst EditButton = ({ onClick }) => {\n  return (\n    <StyledButton onClick={onClick}>\n      <img src={pencil} />\n    </StyledButton>\n  );\n};\nexport default EditButton;\n\nconst StyledButton = styled.button`\n  border: none;\n  outline: none;\n  cursor: pointer;\n  position: relative;\n  width: 20px;\n  height: 20px;\n  background: none;\n  padding: 0;\n  border-radius: 50%;\n  background-color: ${COLOR.LIGHT_GRAY_TRANSPARENT};\n  transition: 0.2s;\n\n  & > img {\n    width: 100%;\n    height: 100%;\n  }\n\n  &:hover {\n    background-color: ${COLOR.LIGHT_GRAY_TRANSLUCENT};\n  }\n`;\n","import React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport COLOR from \"../../../variables/color\";\nimport TEXT from \"../../../variables/texts\";\n\nconst Input = ({ onEditComplete, defaultValue = \"\" }) => {\n  const ref = useRef(null);\n\n  useEffect(() => {\n    ref.current.value = defaultValue;\n    ref.current.focus();\n\n    const onFocusOut = () => onEditComplete(ref.current.value);\n\n    ref.current.addEventListener(\"focusout\", onFocusOut);\n    ref.current.addEventListener(\"keypress\", (event) => {\n      if (event.key !== \"Enter\") return;\n      ref.current.removeEventListener(\"focusout\", onFocusOut);\n      onEditComplete(ref.current.value);\n    });\n  }, []);\n\n  return <StyledInput ref={ref} />;\n};\nexport default Input;\n\nconst StyledInput = styled.input.attrs((props) => ({ ...props, size: \"1\" }))`\n  background-color: ${COLOR.BLACK};\n  color: ${COLOR.LIGHT_GRAY};\n  ${TEXT.S}\n  border-radius: 2px;\n  padding: 0 4px;\n  border: none;\n  outline: none;\n  width: 100%;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport COLOR from \"../../../variables/color\";\nimport TEXT from \"../../../variables/texts\";\nimport Checkbox from \"../../Atoms/Checkbox\";\nimport EditButton from \"../../Atoms/EditButton\";\nimport Input from \"../../Atoms/Input\";\n\nconst Task = ({\n  onTaskNameChange,\n  onTaskComplete,\n  taskName = \"\",\n  defaultIsEditing = false,\n}) => {\n  const [isEditing, setIsEditing] = useState(defaultIsEditing);\n\n  const onEditComplete = (value) => {\n    setIsEditing(false);\n    onTaskNameChange(value);\n  };\n\n  const onEditButtonClick = () => {\n    setIsEditing(true);\n  };\n\n  return (\n    <StyledWrapper>\n      <StyledCheckboxWrapper>\n        <Checkbox onClick={onTaskComplete} />\n      </StyledCheckboxWrapper>\n      {isEditing ? (\n        <Input onEditComplete={onEditComplete} defaultValue={taskName} />\n      ) : (\n        <StyledNameAndButtonWrapper>\n          <StyledTaskName>{taskName}</StyledTaskName>\n          <StyledEditButtonWrapper>\n            <EditButton onClick={onEditButtonClick} />\n          </StyledEditButtonWrapper>\n        </StyledNameAndButtonWrapper>\n      )}\n    </StyledWrapper>\n  );\n};\nexport default Task;\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 2px 6px;\n  overflow: hidden;\n`;\n\nconst StyledCheckboxWrapper = styled.div`\n  margin-right: 10px;\n`;\n\nconst StyledNameAndButtonWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 1 1 auto;\n  overflow: hidden;\n`;\n\nconst StyledTaskName = styled.div`\n  ${TEXT.S}\n  color: ${COLOR.LIGHT_GRAY};\n  flex: 1 1 auto;\n  margin-right: 10px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nconst StyledEditButtonWrapper = styled.div`\n  flex: 0 0 auto;\n  display: flex;\n  align-items: center;\n`;\n"],"names":[],"sourceRoot":""}